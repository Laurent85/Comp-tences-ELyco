<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAYAAAAAACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeHB0eHB0eHB0e
        HB0eHB0eHB0eHB0eHB0eHB0eHB0eHB0eHB0eHB0eHB0eHB0eHB0eHB0eHB0eHB0eHB0eHB0eHB0eHB0e
        HB0eHB0eHB0eHB0eHB0eHB0eHB0eHB0eHB0gHh8gHh8gHh8fHR4fHR4fHR4fHR4gHh8gHh8gHh8gHh8g
        Hh8fHR4fHR4fHR4fHR4gHh8gHh8gHh8gHh8fHR4fHR4fHR4fHR4fHR4gHh8gHh8gHh8gHh8fHR4fHR4f
        HR4mJCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUm
        JCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUnJSYnJSYnJSYnJSYnJSYnJSYnJSYn
        JSYnJSYnJSYnJSYnJSYlIyQhHiAfHR4fHR4fHR4fHR4fHR4fHR4fHR4gHh8nJSYnJSYnJSYnJSYnJSYn
        JSYnJSYnJSYnJSYnJSYnJSYnJSYnJSYnJSYnJSYnJSYnJSYnJSYnJSYnJSYmJCUaGBkeHB00MjM/PT4/
        PT4/PT4/PT4/PT4/PT4/PT48OjsnJSYmJCUnJSYnJSYnJSYnJSYnJSYnJSYnJSYnJSYmJCUmJCUmJCUm
        JCUmJCUmJCUmJCUmJCUmJCUmJCUZFxhhX2DHxsbv7+/4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj6+vri4uItKywg
        Hh8mJCUmJCUmJCUmJCUmJCUmJCUmJCUmJCUnJSYnJSYnJSYnJSYnJSYnJSYnJSYnJSYnJSYZFxhqaWn/
        ///////////////////////////////////////39/cuLC0gHh8nJSYnJSYnJSYnJSYnJSYnJSYnJSYn
        JSY1MzM1MzM1MzM1MzM1MzM1MzM1MzM1MzMyMDAxLzDd3d3////8+/uysbGRkJCUk5OUk5OUk5OUk5OU
        k5OWlZSKiYk4NjYzMTE1MzM1MzM1MzM1MzM1MzM1MzM1MzM1MzM3NTU3NTU3NTU3NTU3NTU3NTU3NTU3
        NTUvLS1QTk77+/v///+rqqoeHBwnJCQoJiYoJiYoJiYoJiYoJiYoJiYqKCg3NTU4NjY3NTU3NTU3NTU3
        NTU3NTU3NTU3NTU3NTU7OTk7OTk7OTk7OTk7OTk7OTk7OTk7OTkxLy9eXVz///////9sa2suLCs7OTk7
        OTk7OTk7OTk7OTk7OTk7OTk7OTk7OTk7OTk7OTk7OTk7OTk7OTk7OTk7OTk7OTk7OTlHRURHRURHRURH
        RURHRURHRURHRURHRUQ+PDtmZGT///////9iYWA6ODZDQUBDQUBDQUBDQUBDQUBDQUBDQUBDQUBFQ0JH
        RURHRURHRURHRURHRURHRURHRURHRURHRURGRENGRENGRENGRENGRENGRENGRENGREM9OzpmZWT/////
        //9qaWhAPjxJR0ZJR0ZJR0ZJR0ZJR0ZJR0ZJR0ZJR0ZIRkVFQ0JGRENGRENGRENGRENGRENGRENGRENG
        RENMSklMSklMSklMSklMSklMSklMSklMSklDQUBsamr////////q6enk5OTl5eXl5eXl5eXl5eXl5eXl
        5eXl5eXn5+eYl5dAPj1LSUhMSklJR0dJR0ZJR0ZJR0ZJR0ZJR0ZXVVVXVVVXVVVXVVVXVVVXVVVXVVVX
        VVVPTU10cnL////+/v7///////////////////////////////////////+qqapKSEhXVVVXVVVXVVVX
        VVVXVVVXVVVXVVVXVVVXVVVXVVVXVVVXVVVXVVVXVVVXVVVXVVVPTU10cnL////9/f2cm5t/fn6GhISG
        hISGhISGhISFg4OAf3/d3d3///+pqKdKSEhVU1NSUFDDwsLl5OTj4uLj4uLj4uLj4uJjYmFjYmFjYmFj
        YmFjYmFjYmFjYmFjYmFcW1p+fXz///////93dnVSUFBaWFhZWFdaWFdZWFdZV1dSUFDQ0ND///+trKtX
        VlVhYF9eXFvm5ub///////////////////9nZmVnZmVnZmVoZ2ZoZ2ZoZ2ZoZ2ZnZmVgX16BgH//////
        //+CgYBgX15nZmVnZmVnZmVnZmVmZmVfXl3U09P///+vr65cW1lmZWRkY2Kvr67GxcXExMTExMTExMTE
        xMRxcG9xcG9xcG9xcG9xcG9xcG9xcG9xcG9sa2mBgH76+vr///+fn55gXl1sa2lsa2lsa2lsa2poZ2Vs
        a2nn5ub///+vrq1mZWRxcG5ycW9paGdnZmRnZmRnZmRnZmRnZmR4d3R4d3R4d3R4d3R4d3R4d3R4d3R4
        d3R1dHJ1dHLn5+f////t7e2enZuHhoSJiIaJiIeIh4aGhYO8u7r///////+amZhvbmx4d3R4d3R4d3V4
        d3V4d3V4d3V4d3V4d3WCgX+CgX+CgX+CgX+CgX+CgX+CgX+CgX+CgX95eHaxsK/////////////6+vr6
        +vr6+vr6+vn8/Pz////////r6uqAf35/fn2CgX+CgX+CgX+CgX+CgX+CgX+CgX+CgX+JiIeJiIeJiIeJ
        iIeJiIeJiIeJiIeJiIeJiIeIh4aAf367urr19fX////////////////////////////q6uqYl5aBgH+J
        iIeJiIeJiIeJiIeJiIeJiIeJiIeJiIeJiIeSkJCSkJCSkJCSkJCSkJCSkJCSkJCSkJCSkJCSkZCRkI+J
        h4eYlpatrKy3tra4t7e4t7e4t7e2tbWqqamRj4+MioqTkZGSkJCSkJCSkJCSkJCSkJCSkJCSkJCSkJCS
        kJCamJeamJeamJeamJeamJeamJeamJeamJeamJeamJeamJeamJiXlJSTkZGRj4+Rj4+Rj4+Rj4+Rj4+T
        kZGYlpWamJiamJeamJeamJeamJeamJeamJeamJeamJeamJeamJempaOmpaOmpaOmpaOmpaOmpaOmpaOm
        paOmpaOmpaOmpaOmpaOmpaOmpaOmpaOmpaOmpaOmpaOmpaOmpaOmpaOmpaOmpaOmpaOmpaOmpaOmpaOm
        paOmpaOmpaOmpaOmpaOurauurauurauurauurauurauurauurauurauurauurauurauurauurauurauu
        rauurauurauurauurauurauurauurauurauurauurauurauurauurauurauurauurau2tLO2tLO2tLO2
        tLO2tLO2tLO2tLO2tLO2tLO2tLO2tLO2tLO2tLO2tLO2tLO2tLO2tLO2tLO2tLO2tLO2tLO2tLO2tLO2
        tLO2tLO2tLO2tLO2tLO2tLO2tLO2tLO2tLMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///////////////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP///////////////w==
</value>
  </data>
</root>